<!--

         Copyright (C) 2012-2015 DataStax Inc.

      Licensed under the Apache License, Version 2.0 (the "License");
      you may not use this file except in compliance with the License.
      You may obtain a copy of the License at

         http://www.apache.org/licenses/LICENSE-2.0

      Unless required by applicable law or agreed to in writing, software
      distributed under the License is distributed on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
      See the License for the specific language governing permissions and
      limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.datastax.cassandra</groupId>
    <artifactId>dse-driver</artifactId>
    <version>1.0.0-eap1-SNAPSHOT</version>

    <packaging>bundle</packaging>

    <name>DataStax Java Driver for Apache Cassandra - DataStax Enterprise Module</name>
    <description>Extensions to the CQL driver for use with DataStax Enterprise.</description>
    <inceptionYear>2012</inceptionYear>

    <url>https://github.com/datastax/java-driver-dse</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <dse>true</dse>
        <cassandra.version>5.0</cassandra.version>
        <java.version>1.6</java.version>
        <java-driver.version>3.0.0</java-driver.version>
        <slf4j-api.version>1.7.13</slf4j-api.version>
        <guava.version>16.0.1</guava.version>
        <snappy.version>1.0.5</snappy.version>
        <lz4.version>1.2.0</lz4.version>
        <hdr.version>2.1.4</hdr.version>
        <jackson.version>2.6.3</jackson.version>
        <esri.version>1.2.1</esri.version>
        <testng.version>6.8.8</testng.version>
        <assertj.version>1.7.0</assertj.version>
        <mockito.version>1.10.19</mockito.version>
        <commons-exec.version>1.3</commons-exec.version>
        <scassandra.version>0.11.0</scassandra.version>
        <currentYear>2015</currentYear>
        <ipprefix>127.0.1.</ipprefix>
        <test.groups>unit</test.groups>
        <!-- Set default javadoc.opts, overriden by profiles -->
        <javadoc.opts/>
        <!-- Skip deployment, unless explicitly overridden from the command line -->
        <maven.deploy.skip>true</maven.deploy.skip>
    </properties>

    <dependencies>

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${java-driver.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>

        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>${jackson.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>com.esri.geometry</groupId>
            <artifactId>esri-geometry-api</artifactId>
            <version>${esri.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- Driver sources jar (explicitly declared so that it gets included in the final binary tarball) -->

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${java-driver.version}</version>
            <classifier>sources</classifier>
            <optional>true</optional>
        </dependency>

        <!-- Optional driver dependencies (re-declared so that they get included in the final binary tarball) -->

        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>${snappy.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>net.jpountz.lz4</groupId>
            <artifactId>lz4</artifactId>
            <version>${lz4.version}</version>
            <optional>true</optional>
        </dependency>

        <dependency>
            <groupId>org.hdrhistogram</groupId>
            <artifactId>HdrHistogram</artifactId>
            <version>${hdr.version}</version>
            <optional>true</optional>
        </dependency>

        <!-- test dependencies -->

        <dependency>
            <groupId>com.datastax.cassandra</groupId>
            <artifactId>cassandra-driver-core</artifactId>
            <version>${java-driver.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>${testng.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
            <version>${assertj.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.scassandra</groupId>
            <artifactId>java-client</artifactId>
            <version>${scassandra.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>ch.qos.logback</groupId>
                    <artifactId>logback-classic</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-exec</artifactId>
            <version>${commons-exec.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
            <version>${slf4j-api.version}</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>

        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.4.1.Final</version>
            </extension>
        </extensions>

        <plugins>

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                    <optimize>true</optimize>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <!--
                    Avoids warnings when cross-compiling to older source levels, see
                    https://blogs.oracle.com/darcy/entry/bootclasspath_older_source
                    -->
                    <compilerArgument>-Xlint:-options</compilerArgument>
                    <!-- this actually means: use incremental compilation -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <version>2.4.0</version>
                <!--
                  Default configuration, used by the `bundle` goal that is implicitly bound to the `package` phase
                  (because the project uses the `bundle` packaging)
                -->
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>com.datastax.driver.dse</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <_include>-osgi.bnd</_include>
                        <Import-Package>
                            <![CDATA[com.google.common.*;version="[16.0.1,19)",
                            !com.fasterxml.jackson.*,*
                            !com.esri.core.geometry.*,*
                            !org.json.*,*
                            !org.codehaus.jackson.*,*
                            ]]>
                        </Import-Package>
                        <Private-Package>com.datastax.shaded.*</Private-Package>
                    </instructions>
                    <supportedProjectTypes>
                        <supportedProjectType>jar</supportedProjectType>
                        <supportedProjectType>bundle</supportedProjectType>
                        <supportedProjectType>pom</supportedProjectType>
                    </supportedProjectTypes>
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.4.2</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <artifactSet>
                                <includes>
                                    <include>com.fasterxml.jackson.core:*</include>
                                    <include>com.esri.geometry:*</include>
                                    <include>org.json:*</include>
                                    <include>org.codehaus.jackson:*</include>
                                </includes>
                            </artifactSet>
                            <relocations>
                                <relocation>
                                    <pattern>com.fasterxml.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.jackson</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>com.esri.core.geometry</pattern>
                                    <shadedPattern>com.datastax.shaded.esri</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.json</pattern>
                                    <shadedPattern>com.datastax.shaded.json</shadedPattern>
                                </relocation>
                                <relocation>
                                    <pattern>org.codehaus.jackson</pattern>
                                    <shadedPattern>com.datastax.shaded.codehaus-jackson</shadedPattern>
                                </relocation>
                            </relocations>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.DontIncludeResourceTransformer">
                                    <resources>
                                        <!-- ServicesResourceTransformer does not transform file names, only file contents -->
                                        <resource>META-INF/services/com.fasterxml.jackson.core.JsonFactory</resource>
                                        <resource>META-INF/services/com.fasterxml.jackson.core.ObjectCodec</resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.properties
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-annotations/pom.xml
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.properties
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.properties
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-core/pom.xml
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.properties
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.fasterxml.jackson.core/jackson-databind/pom.xml
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.esri.geometry/esri-geometry-api/pom.xml
                                        </resource>
                                        <resource>
                                            META-INF/maven/com.esri.geometry/esri-geometry-api/pom.properties
                                        </resource>
                                    </resources>
                                </transformer>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <configuration>
                    <groups>${test.groups}</groups>
                    <useFile>false</useFile>
                    <argLine>-Duser.language=en</argLine>
                    <systemPropertyVariables>
                        <cassandra.version>${cassandra.version}</cassandra.version>
                        <dse>${dse}</dse>
                        <ipprefix>${ipprefix}</ipprefix>
                    </systemPropertyVariables>
                    <classpathDependencyExcludes>
                        <classpathDependencyExcludes>io.netty:netty-transport-native-epoll</classpathDependencyExcludes>
                    </classpathDependencyExcludes>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.10.3</version>
                <inherited>true</inherited>
                <configuration>
                    <verbose>false</verbose>
                    <includeDependencySources>true</includeDependencySources>
                    <dependencySourceIncludes>
                        <dependencySourceInclude>com.datastax.cassandra:*</dependencySourceInclude>
                    </dependencySourceIncludes>
                    <additionalparam>${javadoc.opts}</additionalparam>
                    <!-- I can haz math in my javadoc (see http://zverovich.net/2012/01/14/beautiful-math-in-javadoc.html) -->
                    <header>
                        &lt;script type="text/javascript"
                        src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"&gt;&lt;/script&gt;
                    </header>
                    <!-- open external links in a separate window -->
                    <bottom>
                        &lt;script type="text/javascript"&gt;for(var i in document.links) {
                        var link = document.links[i];
                        if (link.href.indexOf('is-external=true') != -1) link.target = '_blank';}&lt;/script&gt;
                    </bottom>
                    <links>
                        <link>http://docs.datastax.com/en/drivers/java/3.0/</link>
                        <link>https://docs.oracle.com/javase/8/docs/api/</link>
                        <link>http://docs.guava-libraries.googlecode.com/git-history/v16.0.1/javadoc/</link>
                        <link>http://netty.io/4.0/api/</link>
                        <link>https://javaee-spec.java.net/nonav/javadocs/</link>
                        <link>http://fasterxml.github.io/jackson-core/javadoc/2.6/</link>
                        <link>http://fasterxml.github.io/jackson-databind/javadoc/2.6/</link>
                        <link>http://esri.github.io/geometry-api-java/javadoc/</link>
                    </links>
                </configuration>
                <executions>
                    <execution>
                        <id>attach-javadocs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <id>assemble-binary-tarball</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <appendAssemblyId>false</appendAssemblyId>
                    <descriptors>
                        <descriptor>src/assembly/binary-tarball.xml</descriptor>
                    </descriptors>
                    <tarLongFileMode>posix</tarLongFileMode>
                    <attach>false</attach>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5</version>
                <configuration>
                    <tagNameFormat>@{project.version}</tagNameFormat>
                    <preparationGoals>clean verify</preparationGoals>
                    <!-- do NOT specify arguments tag here as it would override the arguments tag in this plugin's definition in the parent POM -->
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>clirr-maven-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <comparisonVersion>1.0.0</comparisonVersion>
                    <ignoredDifferencesFile>../clirr-ignores.xml</ignoredDifferencesFile>
                    <!-- TODO re-enable after 1.0.0 is released -->
                    <skip>true</skip>
                </configuration>
                <!--
                Workaround to make clirr plugin work with Java 8.
                The bug is actually in the BCEL library,
                see https://issues.apache.org/jira/browse/BCEL-173.
                See also https://github.com/RichardWarburton/lambda-behave/issues/31#issuecomment-86052095
                -->
                <dependencies>
                    <dependency>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>bcel-findbugs</artifactId>
                        <version>6.0</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>timestamp-property</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>timestamp-property</goal>
                        </goals>
                        <configuration>
                            <name>currentYear</name>
                            <pattern>yyyy</pattern>
                            <locale>en_US</locale>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!--
            To update license headers run:
            mvn license:format -DcurrentYear=XXXX
            -->
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>2.8</version>
                <configuration>
                    <header>src/license/header.txt</header>
                    <includes>
                        <include>src/**/*.java</include>
                        <include>src/**/*.xml</include>
                        <include>src/**/*.properties</include>
                        <include>**/pom.xml</include>
                    </includes>
                    <mapping>
                        <java>SLASHSTAR_STYLE</java>
                        <properties>SCRIPT_STYLE</properties>
                    </mapping>
                    <strictCheck>true</strictCheck>
                </configuration>
                <executions>
                    <execution>
                        <id>check-license</id>
                        <phase>initialize</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <currentYear>${currentYear}</currentYear>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-maven-plugin</artifactId>
                <version>1.14</version>
                <configuration>
                    <signature>
                        <groupId>org.codehaus.mojo.signature</groupId>
                        <artifactId>java16</artifactId>
                        <version>1.0</version>
                    </signature>
                </configuration>
                <executions>
                    <execution>
                        <id>check</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <profiles>

        <profile>
            <id>short</id>
            <properties>
                <env>default</env>
                <test.groups>unit,short</test.groups>
            </properties>
        </profile>

        <profile>
            <id>long</id>
            <properties>
                <env>default</env>
                <test.groups>unit,short,long</test.groups>
            </properties>
        </profile>

        <profile>
            <id>doclint-java8-disable</id>
            <activation>
                <jdk>[1.8,)</jdk>
            </activation>
            <properties>
                <javadoc.opts>-Xdoclint:none</javadoc.opts>
            </properties>
        </profile>

    </profiles>

    <licenses>
        <license>
            <name>Apache 2</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
            <comments>Apache License Version 2.0</comments>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:git@github.com:datastax/java-driver-dse.git</connection>
        <developerConnection>scm:git:git@github.com:datastax/java-driver-dse.git</developerConnection>
        <url>https://github.com/datastax/java-driver-dse</url>
        <tag>HEAD</tag>
    </scm>

    <developers>
        <developer>
            <name>Various</name>
            <organization>DataStax</organization>
        </developer>
    </developers>

</project>

